plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'
def compileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion') ?: '31'
def minSdkVersion = localProperties.getProperty('flutter.minSdkVersion') ?: '21'
def targetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion') ?: '31'

android {
    compileSdkVersion compileSdkVersion.toInteger()
    ndkVersion localProperties.getProperty('flutter.ndkVersion')

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.anihub"
        minSdkVersion minSdkVersion.toInteger()
        targetSdkVersion targetSdkVersion.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:30.0.1')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    implementation 'com.google.firebase:firebase-core:20.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
